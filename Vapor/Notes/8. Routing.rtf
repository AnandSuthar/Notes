{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww21280\viewh14620\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - Routing  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - \
\
A route closure can return in three way\
	. Response (redirect, )\
	. ResponseRepresentable (JSON, HTML, text)\
	. throw (Abort)\
\
\
\
\
1. Basic Routing\
\
	drop.get(\'93hello\'94) \{ req in\
		return \'93hello\'94\
	\}\
\
\
2.  Nesting \
\
	drop.get(\'93hello\'94, \'93world\'94) \{ era in\
		return \'93hello/world\'94\
	\}\
\
3. Alternate ??\
\
4. Fallback\
\
	drop.get(\'93hello\'94, \'93*\'94) \{ req in\
\
	\}\
\
\
5. Type safe routing 1\
\
	drop.get(\'93users\'94, String.parameter) \{ req in\
		let name = try req.parameters.next(String.self)\
		let lName = try req.parameters.next(String.self)\
		\
		return \'93\\(name) \\(lName)\'94\
	\}\
\
6. Type safe routing 2\
\
	drop.get(\'93users\'94, \'93:name\'94, \'93:lName\'94) \{ req in\
		let name = req.parameters[\'93name\'94]?.string \
		let lName = req.parameters[\'93lName\'94]?.string\
		\
		return \'93\\(name) \\(lName)\'94\
	\}\
\
\
7. Parameterizable ??\
\
\
\
8. Group & Grouped\
\
	drop.group() \{ req in\
		req.get(\'93hello\'94) \{ req2 in\
		\}\
	\}\
\
	drop.group(host: \'93www.google.com\'94) \{ reqFromGoogle in\
		reqFromGoogle.get \{\
			\
		\}\
	\}\
\
	\
9. Collection\
\
	\
	import Vapor\
	import HTTP\
	import Routing\
\
	class V1Collection: Routing, EmptyInitializable \{\
	\
		init() \{\}\
\
		func build(_ build: RouteBuilder) \{\
			\
			let v1 = builder.grouped(\'93v1\'94)\
			let users = v1.grouped(\'93users\'94)\
			\
			users.get \{ req in\
				return \'93users\'94\
			\}\
		\}\
	\}\
\
	// drop.collection(V1Collection.self)\
\
\
\
}