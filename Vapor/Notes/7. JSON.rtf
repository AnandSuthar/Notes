{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww17120\viewh12560\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - JSON  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - \
\
1. Request :- json is automatically available in response.data. \
	\
		guard let name = request.data[\'93name\'94]?.string else \{\
			throw Abort(.badRequest)\
		\}\
	\
2. Response :-\
	\
		var json = JSON()\
		try json.set(\'93name\'94, \'93anand\'94) \
		return json\
\
3. Convertible\
\
	extension User: JSONRepresentable \{\
		func makeJSON() throws -> JSON \{\
\
			var json = JSON() \
			try json.set(\'93id\'94, id)			\
			try json.set(\'93name\'94, name)\
			return json\
\
		\}\
	\}\
\
		// use     return user.makeJSON()\
\
			OR\
	\
	extension User: ResponseRepresentable \{\
		func makeJONS() throws -> JSON \{\
\
			 . . . . . . . \
	\
		\}\
	\}\
	\
\
		// use return user // this will automatically call makeJSON func\
\
4. Initializable\
\
	extension User: JSONInitializable \{\
		convenience init(json: JSON) throws \{\
			try self.init(\
				name: json.get(\'93name\'94),\
				age: json.get(\'93age\'94)\
			)\
		\}\
	\}\
\
\
	drop.post(\'93users\'94) \{ req in\
\
		guard let json = req.json else \{\
			throw Abort(.badRequest)\
		\}	\
		\
		let user = try User(json: json)\
		try user.save()\
		return user\
\
	\}\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
\
}